generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Usuario {
  id        Int         @id @default(autoincrement())
  nome      String
  email     String      @unique
  telefone  String
  senha     String
  criadoEm  DateTime    @default(now())
  avaliacao Avaliacao[]
  servicos  Servico[]
}

model Localizacao {
  id       Int       @id @default(autoincrement())
  numero   String
  bairro   String
  cidade   String
  estado   String
  criadoEm DateTime  @default(now())
  servico  Servico[]
}

model Servico {
  id            Int          @id @default(autoincrement())
  nomeNegocio   String
  descricao     String
  usuarioId     Int
  categoriaId   Int?
  localizacaoId Int?
  criadoEm      DateTime     @default(now())
  avaliacao     Avaliacao[]
  preco         Preco[]
  categoria     Categoria?   @relation(fields: [categoriaId], references: [id])
  localizacao   Localizacao? @relation(fields: [localizacaoId], references: [id])
  usuario       Usuario      @relation(fields: [usuarioId], references: [id])
}

model Categoria {
  id           Int       @id @default(autoincrement())
  nomeServico  String    @unique
  criadoEm     DateTime  @default(now())
  atualizadoEm DateTime  @updatedAt
  servicos     Servico[]
}

model Avaliacao {
  id           Int      @id @default(autoincrement())
  star         Float
  descricao    String
  servicoId    Int
  usuarioId    Int
  criadoEm     DateTime @default(now())
  atualizadoEm DateTime @updatedAt
  servico      Servico  @relation(fields: [servicoId], references: [id])
  usuario      Usuario  @relation(fields: [usuarioId], references: [id])
}

model Preco {
  id           Int      @id @default(autoincrement())
  nomeservico  String
  precificacao Float
  servicoId    Int
  criadoEm     DateTime @default(now())
  atualizadoEm DateTime @updatedAt
  servico      Servico  @relation(fields: [servicoId], references: [id])
}
